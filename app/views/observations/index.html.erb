<% provide(:title, "Map") %>

<div id="search-bar"></div>

<div id="map"></div>

<script>
  $(function() {
    // Add the tile layers
    var accessToken = 'pk.eyJ1Ijoicml2ZXJyYW5nZXJzIiwiYSI6ImZlMzBjZDI0Zjk0MjRhMTY4NzE3MWUwNmEwZDk4MDExIn0.yHAJvvSNFBh73DQp_78y0g';
    var mapboxTiles = L.tileLayer('https://{s}.tiles.mapbox.com/v4/mapbox.streets-satellite/{z}/{x}/{y}.png?access_token=' + accessToken, {
      attribution: '<a href="http://www.mapbox.com/about/maps/" target="_blank">Terms &amp; Feedback</a>'
    });
    // Set the map
    var map = L.map('map', {
      zoom: 10
    }).addLayer(mapboxTiles);
    map.spin(true,{
      lines: 9, 
      length: 20,
      color: '#0f2a47',
      zIndex: 1000
    });
    // Use locate to add the users current position
    map.locate({setView: true, maxZoom: 16});
    // Once the location is found add a marker and hide the pre-loader
    map.on('locationfound', onLocationFound);
    map.on('locationerror', onLocationError);
    var currentLocationMarker = L.AwesomeMarkers.icon({
      prefix: 'fa',
      icon: 'map-marker',
      markerColor: 'green',
      iconColor: 'white'
    })
    function onLocationFound(e) {
      console.log('Got your location')
      var lat = (e.latlng.lat),
          lng = (e.latlng.lng);
      L.marker([lat,lng], {icon: currentLocationMarker}).bindPopup(
        '<div class="map-popup">' +
        '<h2>Your current location</h2>' + 
        '<a href="/observations/new?currentlat=' + e.latlng.lat + '&currentlng=' + e.latlng.lng + '" class="button mini">Add new observation</a>' +
        '</div>'
      ).addTo(map).openPopup();
      map.spin(false);
    }
    function onLocationError(e) {
      alert("We can't find your current location at the moment. Please use the search or click on the map to find your current position.");
      map.setView(new L.LatLng(45.421530, -75.697193), 10);
      L.marker([45.421530,-75.697193], {icon: currentLocationMarker}).bindPopup(
        '<div class="map-popup">' +
        '<h2>Ottawa</h2>' + 
        // '<a href="/observations/new?currentlat=' + e.latlng.lat + '&currentlng=' + e.latlng.lng + '" class="button mini">Add new observation</a>' +
        '</div>'
      ).addTo(map).openPopup();
      map.spin(false);
    }
    // Lets add a map search
    var searchLocationMarker = L.AwesomeMarkers.icon({
      prefix: 'fa',
      icon: 'plus',
      markerColor: 'red',
      iconColor: 'white'
    });
    map.addControl(new L.Control.Search({
      url: 'http://nominatim.openstreetmap.org/search?format=json&q={s}',
      jsonpParam: 'json_callback',
      propertyName: 'display_name',
      propertyLoc: ['lat','lon'],
      markerLocation: true,
      collapsed: false,
      wrapper: 'search-bar',
      markerIcon: searchLocationMarker
    })
    .on('search_locationfound', function(e) {
      console.log('Search Location is found');
      console.log(this._markerLoc)
      marker = this._markerLoc;
      marker.bindPopup(
        '<div class="map-popup">' +
        '<h2>Searched location</h2>' + 
        '<a href="/observations/new?currentlat=' + e.latlng.lat + '&currentlng=' + e.latlng.lng + '" class="button mini">Add new observation</a>' +
        '</div>'
      ).openPopup();
    }));
    // Add ability to click on a location and add an observation
    var marker;
    function onMapClick(e) {
      console.log('function called')
      map.removeLayer(marker);
      marker = L.marker(e.latlng, {icon: searchLocationMarker, draggable: 'true'})
      marker.addTo(map).bindPopup(
        '<div class="map-popup">' +
        '<h2>Clicked location</h2>' + 
        '<a href="/observations/new?currentlat=' + e.latlng.lat + '&currentlng=' + e.latlng.lng + '" class="button mini">Add new observation</a>' +
        '</div>'
      ).openPopup();
      marker.on('dragend', function(event){
        var marker = event.target;
        var position = marker.getLatLng();
        marker.setLatLng(new L.LatLng(position.lat, position.lng),{draggable:'true'}).bindPopup(
        '<div class="map-popup">' +
        '<h2>Clicked location</h2>' + 
        '<a href="/observations/new?currentlat=' + position.lat + '&currentlng=' + position.lng + '" class="button mini">Add new observation</a>' +
        '</div>'
      ).openPopup();
        map.panTo(new L.LatLng(position.lat, position.lng))
      });
    }
    map.on('click', onMapClick);
    // Load some dummy data for multiple markers
    var places = [
      <% @observations.each do |observation| %>
        [   
          <% if observation.coordinates.respond_to? :x %>
            <%= observation.coordinates.y.to_s + ", " + observation.coordinates.x.to_s %>,
          <% end %>
          '<%= observation.loc_nic %>',
          '<%= link_to "View observation", observation %>'
        ],
      <% end %>
    ];
    // Set our multiple markers
    var markers = L.markerClusterGroup();
    for (var i = 0; i < places.length; i++) {
      var observationMarkers = L.AwesomeMarkers.icon({
        prefix: 'fa',
        icon: 'eye',
        markerColor: 'blue',
        iconColor: 'white'
      })
      marker = new L.marker([places[i][0],places[i][1]], {icon: observationMarkers})
        .bindPopup(
          '<div class="map-popup"><h2>' + places[i][2] + '</h2><p>' + places[i][3] + '</p></div>'
        );
      markers.addLayer(marker);
    }
    map.addLayer(markers);
    // geoJSON
    var geoJsonShapes = [
      <% Ogrgeojson.all.each do |shape| %>
        <%= raw json_escape(shape.geojson) %>,
      <% end %>
    ]
    var style = {
      fillColor: "#E3E3E3",
      weight: 3,
      opacity: 1,
      color: 'red',
      fillOpacity: 0
    }
    function onEachFeature(feature, layer) {
      layer.on('click', onMapClick);
    }
    L.geoJson(geoJsonShapes,{
      style: style,
      onEachFeature: onEachFeature
    }).addTo(map);
  });
</script>